MATRIX_STR = '''
7ir
Tsi
h%x
i ?
sM# 
$a 
#t%'''  # Исходная «матрица» (таблица символов) в виде многострочной строки

rows = MATRIX_STR.strip('\n').splitlines()      # Убираем пустые строки по краям и режем на строки; пробелы внутри строк сохраняются
max_len = max(len(r) for r in rows)              # Находим максимальную длину строки, чтобы выровнять матрицу в прямоугольник
matrix = [list(row) for row in rows]  # Каждую строку превращаем в список символов и дополняем справа пробелами до max_len

res = []                 # Здесь будем накапливать результат посимвольно (в т.ч. вставленные пробелы)
need_space = False       # Флаг: видели ли мы «шум» (небуквы) до следующей буквы — тогда вставим один пробел

# Идём по столбцам слева направо
for col in range(max_len):                 # Внешний цикл: номер столбца
    # Идём по строкам сверху вниз
    for row in range(len(matrix)):         # Внутренний цикл: номер строки
        ch = matrix[row][col]              # Берём символ по координате [row][col]
        if ch.isalpha():                   # Если символ — буква
            if need_space and res:         # Если до этого встречались небуквы и уже что-то добавлено
                res.append(' ')            # Вставляем ровно один пробел между словами
            res.append(ch)                 # Добавляем букву в результат
            need_space = False             # Сбрасываем флаг «нужен пробел» (т.к. мы только что добавили букву)
        else:
            need_space = True              # Небуквенный символ: помечаем, что между буквами был «шум»

decoded = ''.join(res).strip()             # Склеиваем символы в строку и убираем пробелы по краям
print(decoded)                             # Печатаем итоговое сообщение: This is Matrix
